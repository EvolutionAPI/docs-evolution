{
  "openapi": "3.0.3",
  "info": {
    "title": "Evolution API",
    "version": "1.7.1"
  },
  "servers": [
    {
      "url": "https://{server-url}",
      "variables": {
        "server-url": {
          "default": "evolution-example",
          "description": "The URL of your EvolutionAPI server"
        }
      },
      "description": "Your instance domain"
    }
  ],
  "paths": {
    "/instance/create": {
      "post": {
        "operationId": "createInstance",
        "summary": "Create Instance",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["instanceName"],
                "properties": {
                  "instanceName": {
                    "type": "string",
                    "description": "instance (Instance name)"
                  },
                  "token": {
                    "type": "string",
                    "description": "apikey (Enter or leave empty to create dynamically)"
                  },
                  "qrcode": {
                    "type": "boolean",
                    "description": "Create QR Code automatically after creation"
                  },
                  "number": {
                    "type": "string",
                    "description": "559999999999 (Instance owner number with Country Code)"
                  },
                  "integration": {
                    "type": "string",
                    "description": "WhatsApp engine",
                    "enum": ["WHATSAPP-BAILEYS", "WHATSAPP-BUSINESS"]
                  },
                  "webhook": {
                    "type": "string",
                    "description": "Webhook URL"
                  },
                  "webhook_by_events": {
                    "type": "boolean",
                    "description": "Enable Webhook by events"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN",
                        "TYPEBOT_START",
                        "TYPEBOT_CHANGE_STATUS"
                      ]
                    },
                    "description": "Events to be sent to the Webhook"
                  },
                  "reject_call": {
                    "type": "boolean",
                    "description": "Reject WhatsApp calls automatically"
                  },
                  "msg_call": {
                    "type": "string",
                    "description": "Message to be sent when a call is rejected automatically"
                  },
                  "groups_ignore": {
                    "type": "boolean",
                    "description": "Ignore group messages"
                  },
                  "always_online": {
                    "type": "boolean",
                    "description": "Keep WhatsApp always online"
                  },
                  "read_messages": {
                    "type": "boolean",
                    "description": "Send read receipts to received messages"
                  },
                  "read_status": {
                    "type": "boolean",
                    "description": "Show sent messages read status"
                  },
                  "websocket_enabled": {
                    "type": "boolean",
                    "description": "Enable websocket"
                  },
                  "websocket_events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN",
                        "TYPEBOT_START",
                        "TYPEBOT_CHANGE_STATUS"
                      ]
                    },
                    "description": "Events to be sent to the websocket"
                  },
                  "rabbitmq_enabled": {
                    "type": "boolean",
                    "description": "Enable RabbitMQ"
                  },
                  "rabbitmq_events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN",
                        "TYPEBOT_START",
                        "TYPEBOT_CHANGE_STATUS"
                      ]
                    },
                    "description": "Events to be sent to the RabbitMQ"
                  },
                  "sqs_enabled": {
                    "type": "boolean",
                    "description": "Enable SQS"
                  },
                  "sqs_events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN",
                        "TYPEBOT_START",
                        "TYPEBOT_CHANGE_STATUS"
                      ]
                    },
                    "description": "Events to be sent to the SQS"
                  },
                  "typebot_url": {
                    "type": "string",
                    "description": "URL for the typebot instance"
                  },
                  "typebot": {
                    "type": "string",
                    "description": "Typebot name TODO"
                  },
                  "typebot_expire": {
                    "type": "integer",
                    "description": "Seconds to expire TODO"
                  },
                  "typebot_keyword_finish": {
                    "type": "string",
                    "description": "Keyword to be sent on typebot finish TODO"
                  },
                  "typebot_delay_message": {
                    "type": "integer",
                    "description": "Default delay for the typebot messages"
                  },
                  "typebot_unknown_message": {
                    "type": "string",
                    "description": "TODO"
                  },
                  "typebot_listening_from_me": {
                    "type": "boolean",
                    "description": "Typebot listen messages sent by the connected number"
                  },
                  "proxy": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "Proxy host"
                      },
                      "port": {
                        "type": "string",
                        "description": "Proxy port"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "Proxy protocol",
                        "enum": ["http", "https"]
                      },
                      "username": {
                        "type": "string",
                        "description": "Proxy username"
                      },
                      "password": {
                        "type": "string",
                        "description": "Proxy password"
                      }
                    }
                  },
                  "chatwoot_account_id": {
                    "type": "integer",
                    "description": "Chatwoot account ID"
                  },
                  "chatwoot_token": {
                    "type": "string",
                    "description": "Chatwoot authentication token"
                  },
                  "chatwoot_url": {
                    "type": "string",
                    "description": "Chatwoot server URL"
                  },
                  "chatwoot_sign_msg": {
                    "type": "boolean",
                    "description": "Send message signature on Chatwoot"
                  },
                  "chatwoot_reopen_conversation": {
                    "type": "boolean",
                    "description": "Reopen conversation on Chatwoot"
                  },
                  "chatwoot_conversation_pending": {
                    "type": "boolean",
                    "description": "TODO"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "type": "object",
                      "properties": {
                        "instanceName": {
                          "type": "string",
                          "description": "The name of the instance"
                        },
                        "instanceId": {
                          "type": "string",
                          "description": "The unique identifier for the instance"
                        },
                        "webhook_wa_business": {
                          "type": "string",
                          "description": "The webhook URL for WhatsApp Business integration"
                        },
                        "access_token_wa_business": {
                          "type": "string",
                          "description": "The access token for WhatsApp Business"
                        },
                        "status": {
                          "type": "string",
                          "description": "The current status of the instance"
                        }
                      }
                    },
                    "hash": {
                      "type": "object",
                      "properties": {
                        "apikey": {
                          "type": "string",
                          "description": "The API key for authentication"
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "reject_call": {
                          "type": "boolean",
                          "description": "Indicates whether calls are rejected"
                        },
                        "msg_call": {
                          "type": "string",
                          "description": "Message to be sent when a call is rejected"
                        },
                        "groups_ignore": {
                          "type": "boolean",
                          "description": "Indicates whether groups are ignored"
                        },
                        "always_online": {
                          "type": "boolean",
                          "description": "Indicates whether the instance is always online"
                        },
                        "read_messages": {
                          "type": "boolean",
                          "description": "Indicates whether messages are marked as read"
                        },
                        "read_status": {
                          "type": "boolean",
                          "description": "Indicates whether status updates are marked as read"
                        },
                        "sync_full_history": {
                          "type": "boolean",
                          "description": "Indicates whether the full message history is synchronized"
                        }
                      }
                    }
                  },
                  "example": {
                    "instance": {
                      "instanceName": "teste-docs",
                      "instanceId": "af6c5b7c-ee27-4f94-9ea8-192393746ddd",
                      "webhook_wa_business": null,
                      "access_token_wa_business": "",
                      "status": "created"
                    },
                    "hash": {
                      "apikey": "123456"
                    },
                    "settings": {
                      "reject_call": false,
                      "msg_call": "",
                      "groups_ignore": true,
                      "always_online": false,
                      "read_messages": false,
                      "read_status": false,
                      "sync_full_history": false
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 403,
                    "error": "Forbidden",
                    "response": {
                      "message": [
                        "This name \"instance-example-name\" is already in use."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/instance/fetchInstances": {
      "get": {
        "operationId": "fetchInstances",
        "summary": "Fetch Instances",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instanceName",
            "description": "Name of the instance to be fetched",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Returns the instance with the name informed in the parameter, or all the instances if empty.",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "instance": {
                        "instanceName": "example-name",
                        "instanceId": "421a4121-a3d9-40cc-a8db-c3a1df353126",
                        "owner": "553199999999@s.whatsapp.net",
                        "profileName": "Guilherme Gomes",
                        "profilePictureUrl": null,
                        "profileStatus": "This is the profile status.",
                        "status": "open",
                        "serverUrl": "https://example.evolution-api.com",
                        "apikey": "B3844804-481D-47A4-B69C-F14B4206EB56",
                        "integration": {
                          "integration": "WHATSAPP-BAILEYS",
                          "webhook_wa_business": "https://example.evolution-api.com/webhook/whatsapp/db5e11d3-ded5-4d91-b3fb-48272688f206"
                        }
                      }
                    },
                    {
                      "instance": {
                        "instanceName": "teste-docs",
                        "instanceId": "af6c5b7c-ee27-4f94-9ea8-192393746ddd",
                        "status": "close",
                        "serverUrl": "https://example.evolution-api.com",
                        "apikey": "123456",
                        "integration": {
                          "token": "123456",
                          "webhook_wa_business": "https://example.evolution-api.com/webhook/whatsapp/teste-docs"
                        }
                      }
                    }
                  ],
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/instance/connect/{instance}": {
      "get": {
        "operationId": "instanceConnect",
        "summary": "Instances Connect",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "number",
            "description": "Phone number (with country code) to be connected",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Generates and returns the QR code for WhatsApp connection",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pairingCode": {
                      "type": "string",
                      "description": "The unique code used for pairing a device or account."
                    },
                    "code": {
                      "type": "string",
                      "description": "A specific code associated with the pairing process. This may include tokens or other identifiers."
                    },
                    "count": {
                      "type": "integer",
                      "description": "The count or number of attempts or instances related to the pairing process."
                    }
                  },
                  "example": {
                    "pairingCode": "WZYEH1YY",
                    "code": "2@y8eK+bjtEjUWy9/FOM...",
                    "count": 1
                  }
                }
              }              
            }
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/instance/restart/{instance}": {
      "put": {
        "operationId": "restartInstance",
        "summary": "Restart Instance",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Restarts the instance",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "type": "object",
                      "properties": {
                        "instanceName": {
                          "type": "string",
                          "description": "The name of the instance."
                        },
                        "state": {
                          "type": "string",
                          "description": "The state of the instance."
                        }
                      }
                    }
                  },
                  "example": {
                    "instance": {
                      "instanceName": "teste-docs",
                      "state": "open"
                    }
                  }
                }
              }              
            }
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/instance/connectionState/{instance}": {
      "get": {
        "operationId": "connectionState",
        "summary": "Connection State",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Gets the state of the connection",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "type": "object",
                      "properties": {
                        "instanceName": {
                          "type": "string",
                          "description": "The name of the instance."
                        },
                        "state": {
                          "type": "string",
                          "description": "The state of the instance."
                        }
                      }
                    }
                  },
                  "example": {
                    "instance": {
                      "instanceName": "teste-docs",
                      "state": "open"
                    }
                  }
                }
              }              
            }
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/instance/logout/{instance}": {
      "delete": {
        "operationId": "logoutInstance",
        "summary": "Logout Instance",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Makes logout on instance",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the response."
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Indicates whether an error occurred."
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "A message related to the response."
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "SUCCESS",
                    "error": false,
                    "response": {
                      "message": "Instance logged out"
                    }
                  }
                }
              }              
            }
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/instance/delete/{instance}": {
      "delete": {
        "operationId": "deleteInstance",
        "summary": "Delete Instance",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Deletes instance",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the response."
                    },
                    "error": {
                      "type": "boolean",
                      "description": "Indicates whether an error occurred."
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "A message related to the response."
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "SUCCESS",
                    "error": false,
                    "response": {
                      "message": "Instance deleted"
                    }
                  }
                }
              }              
            }
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/instance/setPresence/{instance}": {
      "post": {
        "operationId": "setPresence",
        "summary": "Set Presence",
        "tags": ["Instance Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Deletes instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["presence"],
                "properties": {
                  "presence": {
                    "type": "string",
                    "enum": ["available", "unavailable"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {}
          },
          "404": {
            "description": "Instance not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "error": {
                      "type": "string",
                      "description": "The error message indicating the type of error"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of detailed error messages"
                        }
                      }
                    }
                  },
                  "example": {
                    "status": 404,
                    "error": "Not Found",
                    "response": {
                      "message": [
                        "The \"invalid-instance\" instance does not exist"
                      ]
                    }
                  }
                }
              }              
            }
          }
        }
      }
    },
    "/webhook/set/{instance}": {
      "post": {
        "operationId": "setWebhook",
        "summary": "Set Webhook",
        "tags": ["Webhook Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set Webhook for instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Webhook URL"
                  },
                  "webhook_by_events": {
                    "type": "boolean",
                    "description": "Enables Webhook by events"
                  },
                  "webhook_base64": {
                    "type": "boolean",
                    "description": "TODO"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN",
                        "TYPEBOT_START",
                        "TYPEBOT_CHANGE_STATUS"
                      ]
                    },
                    "description": "Events to be sent to the Webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/webhook/find/{instance}": {
      "get": {
        "operationId": "findWebhook",
        "summary": "Find Webhook",
        "tags": ["Webhook Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch Webhook configuration",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/settings/set/{instance}": {
      "post": {
        "operationId": "setSettings",
        "summary": "Set Settings",
        "tags": ["Settings Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reject_call": {
                    "type": "boolean",
                    "description": "Reject calls automatically"
                  },
                  "msg_call": {
                    "type": "string",
                    "description": "Message to send after rejecting a call automatically"
                  },
                  "groups_ignore": {
                    "type": "boolean",
                    "description": "Ignore group messages"
                  },
                  "always_online": {
                    "type": "boolean",
                    "description": "Always show WhatsApp online"
                  },
                  "read_messages": {
                    "type": "boolean",
                    "description": "Send read receipts"
                  },
                  "read_status": {
                    "type": "boolean",
                    "description": "See message status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/settings/find/{instance}": {
      "get": {
        "operationId": "findWebhook",
        "summary": "Find Webhook",
        "tags": ["Webhook Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch Webhook configuration",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendTemplate/{instance}": {
      "post": {
        "operationId": "sendTemplate",
        "summary": "Send Template",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send a template message with the Official WhatsApp API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Message receiver number with country code"
                  },
                  "templateMessage": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Template name"
                      },
                      "language": {
                        "type": "string",
                        "description": "Template language",
                        "example": "pt_BR"
                      },
                      "components": {
                        "type": "array",
                        "description": "Template components",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": ["header", "body", "button"]
                            },
                            "sub_type": {
                              "type": "string",
                              "enum": [
                                "quick_reply",
                                "url",
                                "copy_code",
                                "catalog"
                              ]
                            },
                            "index": {
                              "type": "string",
                              "description": "Button index from 0-9"
                            },
                            "parameters": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "Parameter type",
                                    "enum": [
                                      "payload",
                                      "text",
                                      "coupon_code",
                                      "currency",
                                      "date_time",
                                      "image",
                                      "document",
                                      "video"
                                    ]
                                  },
                                  "text": {
                                    "type": "string",
                                    "description": "Parameter text"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendText/{instance}": {
      "post": {
        "operationId": "sendText",
        "summary": "Send Text",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send plain text message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing", "recording"]
                      },
                      "linkPreview": {
                        "type": "boolean",
                        "description": "TODO"
                      },
                      "quoted": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "object",
                            "properties": {
                              "remoteJid": {
                                "type": "string",
                                "description": "Receiver phone number with country code"
                              },
                              "fromMe": {
                                "type": "boolean",
                                "description": "If the message is from the owner number"
                              },
                              "id": {
                                "type": "string",
                                "description": "Message ID"
                              },
                              "participant": {
                                "type": "string",
                                "description": "TODO"
                              }
                            }
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "conversation": {
                                "type": "string",
                                "description": "TODO"
                              }
                            }
                          }
                        }
                      },
                      "mentions": {
                        "type": "object",
                        "properties": {
                          "everyOne": {
                            "type": "boolean",
                            "description": "Mentions everyone"
                          },
                          "mentioned": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Receiver phone number with country code"
                            }
                          }
                        }
                      }
                    }
                  },
                  "textMessage": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Text message content"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendMedia/{instance}": {
      "post": {
        "operationId": "sendMedia",
        "summary": "Send Media",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send media message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing", "recording"]
                      }
                    }
                  },
                  "mediaMessage": {
                    "type": "object",
                    "properties": {
                      "mediaType": {
                        "type": "string",
                        "description": "Media type",
                        "enum": ["image", "video", "document", "audio"]
                      },
                      "fileName": {
                        "type": "string",
                        "description": "Name of the file (for media type `document` only)",
                        "example": "evolution-api.pdf"
                      },
                      "caption": {
                        "type": "string",
                        "description": "Caption to send with media (except with media type `audio`)"
                      },
                      "media": {
                        "type": "string",
                        "description": "Media URL or file in base64"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendWhatsAppAudio/{instance}": {
      "post": {
        "operationId": "sendWhatsAppAudio",
        "summary": "Send WhatsApp Audio",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send WhatsApp Audio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["recording"],
                        "default": "recording"
                      },
                      "encoding": {
                        "type": "boolean",
                        "description": "If the audio must be encoded or not"
                      }
                    }
                  },
                  "audioMessage": {
                    "type": "object",
                    "properties": {
                      "audio": {
                        "type": "string",
                        "description": "Audio URL or file in base64"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendSticker/{instance}": {
      "post": {
        "operationId": "sendSticker",
        "summary": "Send Sticker",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send Sticker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing"],
                        "default": "composing"
                      }
                    }
                  },
                  "stickerMessage": {
                    "type": "object",
                    "properties": {
                      "image": {
                        "type": "string",
                        "description": "Image URL or file in base64"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendStatus/{instance}": {
      "post": {
        "operationId": "sendStatus",
        "summary": "Send Status",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Post WhatsApp status (stories)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statusMessage": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "status type",
                        "enum": ["text", "image", "audio"]
                      },
                      "content": {
                        "type": "string",
                        "description": "Text content for type `text` or file URL for type `image` and `audio`"
                      },
                      "caption": {
                        "type": "string",
                        "description": "Text caption for type `image` status"
                      },
                      "backgroundColor": {
                        "type": "string",
                        "description": "Background hex color"
                      },
                      "font": {
                        "type": "integer",
                        "description": "1 - Serif, 2 - Norican Regular, 3 - Bryndan Write, 4 - BebasNeue Regular, 5 - Oswald Heavy"
                      },
                      "allContacts": {
                        "type": "boolean",
                        "description": "true to send to all contacts or false to send to statusJidList"
                      },
                      "statusJidList": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Receivers numbers with country code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendLocation/{instance}": {
      "post": {
        "operationId": "sendLocation",
        "summary": "Send Location",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send Location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing"],
                        "default": "composing"
                      }
                    }
                  },
                  "locationMessage": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Location name"
                      },
                      "address": {
                        "type": "string",
                        "description": "Location address"
                      },
                      "latitude": {
                        "type": "number",
                        "description": "Location latitude"
                      },
                      "longitude": {
                        "type": "number",
                        "description": "Location longitude"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendContact/{instance}": {
      "post": {
        "operationId": "sendContact",
        "summary": "Send Contact",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send Contact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing"],
                        "default": "composing"
                      }
                    }
                  },
                  "contact": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["fullname", "wuid", "phoneNumber"],
                      "properties": {
                        "fullName": {
                          "type": "string",
                          "description": "Contact full name"
                        },
                        "wuid": {
                          "type": "string",
                          "description": "Phone number non-stylized with country code (5531999999999)"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "description": "Phone number stylized (+55 31 9 9999-9999)"
                        },
                        "organization": {
                          "type": "string",
                          "description": "Organization name for the contact"
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact email address"
                        },
                        "url": {
                          "type": "string",
                          "description": "Page URL"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendReaction/{instance}": {
      "post": {
        "operationId": "sendReaction",
        "summary": "Send Reaction",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send Reaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reactionMessage": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "object",
                        "properties": {
                          "remoteJid": {
                            "type": "string",
                            "description": "Chat contact or group remote JID"
                          },
                          "fromMe": {
                            "type": "boolean",
                            "description": "If the message was sent by the instance owner or not"
                          },
                          "id": {
                            "type": "string",
                            "description": "Message ID"
                          }
                        }
                      },
                      "reaction": {
                        "type": "string",
                        "description": "Reaction emoji",
                        "example": "🚀"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendPoll/{instance}": {
      "post": {
        "operationId": "sendPoll",
        "summary": "Send Poll",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send Poll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing", "recording"]
                      }
                    }
                  },
                  "pollMessage": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the poll"
                      },
                      "selectableCount": {
                        "type": "integer",
                        "description": "Amount of options"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/message/sendList/{instance}": {
      "post": {
        "operationId": "sendList",
        "summary": "Send List",
        "tags": ["Message Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send List",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to receive the message (with country code)"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type to show ",
                        "enum": ["composing", "recording"]
                      }
                    }
                  },
                  "listMessage": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "List title"
                      },
                      "description": {
                        "type": "string",
                        "description": "List description"
                      },
                      "buttonText": {
                        "type": "string",
                        "description": "Button text"
                      },
                      "footerText": {
                        "type": "string",
                        "description": "Footer text"
                      },
                      "sections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Section title"
                            },
                            "rows": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string",
                                    "description": "Row title"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Row description"
                                  },
                                  "rowId": {
                                    "type": "string",
                                    "description": "Row ID"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/whatsappNumbers/{instance}": {
      "post": {
        "operationId": "whatsappNumbers",
        "summary": "WhatsApp Numbers",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Check if numbers are on WhatsApp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numbers": {
                    "type": "array",
                    "description": "Phone numbers (with country code) to be checked",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/markMessageAsRead/{instance}": {
      "put": {
        "operationId": "markMessageAsRead",
        "summary": "Mark Message As Read",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Mark message as read",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "read_messages": {
                    "type": "array",
                    "description": "Messages to be mark as read",
                    "items": {
                      "type": "object",
                      "properties": {
                        "remoteJid": {
                          "type": "string",
                          "description": "Chat contact or group remote JID"
                        },
                        "fromMe": {
                          "type": "boolean",
                          "description": "If the message was sent by the instance owner or the contact"
                        },
                        "id": {
                          "type": "string",
                          "description": "Message ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/archiveChat/{instance}": {
      "put": {
        "operationId": "archiveChat",
        "summary": "Archive Chat",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Archive Chat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lastMessage": {
                    "type": "object",
                    "description": "Messages to be mark as read",
                    "properties": {
                      "key": {
                        "type": "object",
                        "properties": {
                          "remoteJid": {
                            "type": "string",
                            "description": "Chat contact or group remote JID"
                          },
                          "fromMe": {
                            "type": "boolean",
                            "description": "If the message was sent by the instance owner or the contact"
                          },
                          "id": {
                            "type": "string",
                            "description": "Message ID"
                          }
                        }
                      }
                    }
                  },
                  "archive": {
                    "type": "boolean",
                    "description": "Whether to archive the chat or not"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/deleteMessageForEveryone/{instance}": {
      "delete": {
        "operationId": "deleteMessageForEveryone",
        "summary": "Delete Message For Everyone",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete Message For Everyone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Message ID"
                  },
                  "remoteJid": {
                    "type": "string",
                    "description": "Chat contact or group remote JID"
                  },
                  "fromMe": {
                    "type": "boolean",
                    "description": "If the message was sent by the instance owner or the contact"
                  },
                  "participant": {
                    "type": "string",
                    "description": "Participant for group messages only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/sendPresence/{instance}": {
      "post": {
        "operationId": "deleteMessageForEveryone",
        "summary": "Delete Message For Everyone",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete Message For Everyone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Receiver phone number with country code"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "delay": {
                        "type": "integer",
                        "description": "Presence time in milliseconds before sending message"
                      },
                      "presence": {
                        "type": "string",
                        "description": "Presence type",
                        "enum": ["composing", "recording"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/fetchProfilePictureUrl/{instance}": {
      "post": {
        "operationId": "fetchProfilePictureUrl",
        "summary": "Fetch Profile Picture URL",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch Profile Picture URL",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Number to fetch profile picture URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/findContacts/{instance}": {
      "post": {
        "operationId": "findContacts",
        "summary": "Find Contacts",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find all contacts or just one from ID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Contact number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/getBase64FromMediaMessage/{instance}": {
      "post": {
        "operationId": "getBase64FromMediaMessage",
        "summary": "Get Base64 From Media Message",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get base64 from media message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message"],
                "properties": {
                  "message": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Message ID"
                          }
                        }
                      }
                    }
                  },
                  "convertToMp4": {
                    "type": "boolean",
                    "description": "Convert video to MP4, for video only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/findMessages/{instance}": {
      "post": {
        "operationId": "findMessages",
        "summary": "Find Messages",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find all messages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "object",
                        "properties": {
                          "remoteJid": {
                            "type": "string",
                            "description": "Contact or group remote JID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/findStatusMessage/{instance}": {
      "post": {
        "operationId": "findStatusMessage",
        "summary": "Find Status Message",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find status message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "MongoDB message ID"
                      },
                      "id": {
                        "type": "string",
                        "description": "Message ID (from WhatsApp)"
                      },
                      "remoteJid": {
                        "type": "string",
                        "description": "Contact or group remote JID"
                      },
                      "fromMe": {
                        "type": "boolean",
                        "description": "Whether the message is from the instance owner or not"
                      }
                    }
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Limit for the return"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/updateMessage/{instance}": {
      "put": {
        "operationId": "updateMessage",
        "summary": "Update Message",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "integer",
                    "description": "Receiver phone number with country code"
                  },
                  "text": {
                    "type": "string",
                    "description": "New message content"
                  },
                  "key": {
                    "type": "object",
                    "properties": {
                      "remoteJid": {
                        "type": "string",
                        "description": "Chat contact or group remote JID"
                      },
                      "fromMe": {
                        "type": "boolean",
                        "description": "If the message was sent by the instance owner or not"
                      },
                      "id": {
                        "type": "string",
                        "description": "Message ID"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/findChats/{instance}": {
      "get": {
        "operationId": "findChats",
        "summary": "Find Chats",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find all chats",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/fetchBusinessProfile/{instance}": {
      "post": {
        "operationId": "fetchBusinessProfile",
        "summary": "Fetch Business Profile",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch business profile from phone number",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Phone number with country code"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/fetchProfile/{instance}": {
      "post": {
        "operationId": "fetchBusinessProfile",
        "summary": "Fetch Business Profile",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch business profile from phone number",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Phone number with country code"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/updateProfileName/{instance}": {
      "post": {
        "operationId": "updateProfileName",
        "summary": "Update Profile Name",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update profile name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for profile"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/updateProfileStatus/{instance}": {
      "post": {
        "operationId": "updateProfileStatus",
        "summary": "Update Profile Status",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update profile status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "New status for profile"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/updateProfilePicture/{instance}": {
      "put": {
        "operationId": "updateProfilePicture",
        "summary": "Update Profile Picture",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update profile picture",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "picture": {
                    "type": "string",
                    "description": "New spicture URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/removeProfilePicture/{instance}": {
      "delete": {
        "operationId": "removeProfilePicture",
        "summary": "Remove Profile Picture",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update profile picture",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/fetchPrivacySettings/{instance}": {
      "get": {
        "operationId": "fetchPrivacySettings",
        "summary": "Fetch Privacy Settings",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch privacy settings",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chat/updatePrivacySettings/{instance}": {
      "put": {
        "operationId": "updatePrivacySettings",
        "summary": "Update Privacy Settings",
        "tags": ["Chat Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update privacy settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "privacySettings": {
                    "type": "object",
                    "properties": {
                      "readreceipts": {
                        "type": "string",
                        "enum": ["all", "none"]
                      },
                      "profile": {
                        "type": "string",
                        "enum": ["all", "contacts", "contact_blacklist", "none"]
                      },
                      "status": {
                        "type": "string",
                        "enum": ["all", "contacts", "contact_blacklist", "none"]
                      },
                      "online": {
                        "type": "string",
                        "enum": ["all", "match_last_seen"]
                      },
                      "last": {
                        "type": "string",
                        "enum": ["all", "contacts", "contact_blacklist", "none"]
                      },
                      "groupadd": {
                        "type": "string",
                        "enum": ["all", "contacts", "contact_blacklist"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/create/{instance}": {
      "post": {
        "operationId": "createGroup",
        "summary": "Create Group",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Create group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "object",
                    "description": "Group subject"
                  },
                  "description": {
                    "type": "string",
                    "description": "Group description"
                  },
                  "participants": {
                    "type": "array",
                    "description": "Group members phone numbers with country code",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/updateGroupPicture/{instance}": {
      "put": {
        "operationId": "createGroup",
        "summary": "Create Group",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "description": "Group remote JID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Create group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "object",
                    "description": "New profile picture image URL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/updateGroupSubject/{instance}": {
      "put": {
        "operationId": "updateGroupSubject",
        "summary": "Update Group Subject",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "description": "Group remote JID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update group subject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "object",
                    "description": "New group subject"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/updateGroupDescription/{instance}": {
      "put": {
        "operationId": "updateGroupDescription",
        "summary": "Update Group Description",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "description": "Group remote JID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Update group description",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "object",
                    "description": "New group description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/inviteCode/{instance}": {
      "get": {
        "operationId": "fetchInviteCode",
        "summary": "Fetch Group Invite Code",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "description": "Group remote JID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch group invite code",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/acceptInviteCode/{instance}": {
      "get": {
        "operationId": "fetchInviteCode",
        "summary": "Fetch Group Invite Code",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteCode",
            "description": "Group invite code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch group invite code",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/revokeInviteCode/{instance}": {
      "put": {
        "operationId": "fetchInviteCode",
        "summary": "Fetch Group Invite Code",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "description": "Group remote JID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Fetch group invite code",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/sendInvite/{instance}": {
      "post": {
        "operationId": "sendGroupInvite",
        "summary": "Send Group Invite",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send group invite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupJid": {
                    "type": "string",
                    "description": "Group remote JID"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description to send with the invitation"
                  },
                  "numbers": {
                    "type": "array",
                    "description": "Numbers to receive the invitation",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/inviteInfo/{instance}": {
      "get": {
        "operationId": "findGroupByInviteCode",
        "summary": "Find Group By Invite Code",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteCode",
            "in": "query",
            "description": "Group invite code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find group by invite code",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/findGroupInfos/{instance}": {
      "get": {
        "operationId": "findGroupByJid",
        "summary": "Find Group By Remote JID",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find group by remote JID",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/fetchAllGroups/{instance}": {
      "get": {
        "operationId": "fetchAllGroups",
        "summary": "Fetch All Groups",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "getParticipants",
            "in": "query",
            "description": "Whether to get the group members or not",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Fetch all groups",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/participants/{instance}": {
      "get": {
        "operationId": "fetchAllGroupMembers",
        "summary": "Fetch All Group Members",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Fetch all group members",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/updateParticipant/{instance}": {
      "put": {
        "operationId": "updateParticipant",
        "summary": "Update Group Members",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Update group members",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["add", "remove", "promote", "demote"]
                  },
                  "participants": {
                    "type": "array",
                    "description": "Group members phone numbers with country code",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/updateSetting/{instance}": {
      "put": {
        "operationId": "updateSetting",
        "summary": "Update Group Settings",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Update group settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Group setting (`announcement` = only admins can send messages; `not_announcement` = everyone can send messages; `locked` = only admins can edit group settings; `unlocked` = everyone can edit group settings",
                    "enum": [
                      "announcement",
                      "not_announcement",
                      "locked",
                      "unlocked"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/toggleEphemeral/{instance}": {
      "put": {
        "operationId": "toggleEphemeral",
        "summary": "Toggle Ephemeral Group Messages",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Toggle temporary messages on group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["expiration"],
                "properties": {
                  "expiration": {
                    "type": "integer",
                    "description": "Time to expire message (in seconds)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/group/leaveGroup/{instance}": {
      "delete": {
        "operationId": "leaveGroup",
        "summary": "Leave Group",
        "tags": ["Group Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupJid",
            "in": "query",
            "required": true,
            "description": "Group remote JID",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "description": "Leave group",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/typebot/set/{instance}": {
      "post": {
        "operationId": "setTypebot",
        "summary": "Set Typebot",
        "tags": ["Typebot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set typebot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "url": {
                    "type": "string",
                    "description": "Typebot URL"
                  },
                  "typebot": {
                    "type": "string",
                    "description": "Typebot name"
                  },
                  "expire": {
                    "type": "integer",
                    "description": "Time to expire the sessions"
                  },
                  "keyword_finish": {
                    "type": "string",
                    "description": "Key word to finish typebot flow"
                  },
                  "delay_message": {
                    "type": "integer",
                    "description": "Default delay for text messages"
                  },
                  "unknown_message": {
                    "type": "string",
                    "description": "'Unknown message' error message"
                  },
                  "listening_from_me": {
                    "type": "boolean",
                    "description": "Start typebot for your own messages"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/typebot/start/{instance}": {
      "post": {
        "operationId": "startTypebot",
        "summary": "Start Typebot",
        "tags": ["Typebot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Start typebot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Typebot URL"
                  },
                  "typebot": {
                    "type": "string",
                    "description": "Typebot name"
                  },
                  "remoteJid": {
                    "type": "string",
                    "description": "Receiver remote JID"
                  },
                  "startSession": {
                    "type": "boolean",
                    "description": "Start a new session"
                  },
                  "variables": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Variable name"
                        },
                        "value": {
                          "type": "string",
                          "description": "Variable value"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/typebot/find/{instance}": {
      "get": {
        "operationId": "findTypebot",
        "summary": "Find Typebot",
        "tags": ["Typebot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find typebot",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/typebot/changeStatus/{instance}": {
      "post": {
        "operationId": "changeTypebotStatus",
        "summary": "Change Typebot Status",
        "tags": ["Typebot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Start typebot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "remoteJid": {
                    "type": "string",
                    "description": "Receiver remote JID"
                  },
                  "status": {
                    "type": "string",
                    "description": "New typebot status",
                    "enum": ["opened", "closed", "paused"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chatwoot/set/{instance}": {
      "post": {
        "operationId": "setChatwoot",
        "summary": "Set Chatwoot",
        "tags": ["Chatwoot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set Chatwoot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "account_id": {
                    "type": "string",
                    "description": "Chatwoot account ID"
                  },
                  "token": {
                    "type": "string",
                    "description": "Chatwoot token"
                  },
                  "url": {
                    "type": "string",
                    "description": "Chatwoot server URL"
                  },
                  "sign_msg": {
                    "type": "boolean",
                    "description": "Sign message with user name"
                  },
                  "sign_delimiter": {
                    "type": "string",
                    "description": "Delimiter for sign before the message. Use `\n` for line break"
                  },
                  "reopen_conversation": {
                    "type": "boolean"
                  },
                  "conversation_pending": {
                    "type": "boolean"
                  },
                  "import_contacts": {
                    "type": "boolean"
                  },
                  "import_messages": {
                    "type": "boolean"
                  },
                  "days_limit_import_messages": {
                    "type": "integer",
                    "description": "TODO"
                  },
                  "auto_create": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/chatwoot/find/{instance}": {
      "get": {
        "operationId": "findChatwoot",
        "summary": "Find Chatwoot",
        "tags": ["Chatwoot Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find Chatwoot",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/sqs/set/{instance}": {
      "post": {
        "operationId": "setSQS",
        "summary": "Set SQS",
        "tags": ["SQS Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set SQS",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN"
                      ]
                    },
                    "description": "Events to be sent to the Webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/sqs/find/{instance}": {
      "get": {
        "operationId": "findSQS",
        "summary": "Find SQS",
        "tags": ["SQS Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find SQS",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/rabbitmq/set/{instance}": {
      "post": {
        "operationId": "setRabbitMQ",
        "summary": "Set RabbitMQ",
        "tags": ["RabbitMQ Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set RabbitMQ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN"
                      ]
                    },
                    "description": "Events to be sent to the Webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/rabbitmq/find/{instance}": {
      "get": {
        "operationId": "findRabbitMQ",
        "summary": "Find RabbitMQ",
        "tags": ["RabbitMQ Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find RabbitMQ",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/websocket/set/{instance}": {
      "post": {
        "operationId": "setWebsocket",
        "summary": "Set Websocket",
        "tags": ["Websocket Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Set Websocket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "APPLICATION_STARTUP",
                        "QRCODE_UPDATED",
                        "MESSAGES_SET",
                        "MESSAGES_UPSERT",
                        "MESSAGES_UPDATE",
                        "MESSAGES_DELETE",
                        "SEND_MESSAGE",
                        "CONTACTS_SET",
                        "CONTACTS_UPSERT",
                        "CONTACTS_UPDATE",
                        "PRESENCE_UPDATE",
                        "CHATS_SET",
                        "CHATS_UPSERT",
                        "CHATS_UPDATE",
                        "CHATS_DELETE",
                        "GROUPS_UPSERT",
                        "GROUP_UPDATE",
                        "GROUP_PARTICIPANTS_UPDATE",
                        "CONNECTION_UPDATE",
                        "CALL",
                        "NEW_JWT_TOKEN"
                      ]
                    },
                    "description": "Events to be sent to the Webhook"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/websocket/find/{instance}": {
      "get": {
        "operationId": "findWebsocket",
        "summary": "Find Websocket",
        "tags": ["Websocket Controller"],
        "deprecated": false,
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Find Websocket",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "<success message>"
                    }
                  },
                  "example": {
                    "message": "<success message>"
                  },
                  "required": ["message"]
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "operationId": "getEvoInfo",
        "summary": "Get information about your EvolutionAPI",
        "deprecated": false,
        "parameters": [
          {
            "name": "instance",
            "in": "path",
            "required": true,
            "description": "ID of the instance to connect",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get information about your EvolutionAPI",
        "responses": {
          "200": {
            "description": "Successful response TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "The HTTP status of the response"
                    },
                    "message": {
                      "type": "string",
                      "description": "Descriptive message about the current state of the API"
                    },
                    "version": {
                      "type": "string",
                      "description": "The current version of the API"
                    },
                    "swagger": {
                      "type": "string",
                      "description": "URL to the API's Swagger documentation"
                    },
                    "manager": {
                      "type": "string",
                      "description": "URL to the API manager"
                    },
                    "documentation": {
                      "type": "string",
                      "description": "URL to the detailed API documentation"
                    }
                  },
                  "example": {
                    "status": 200,
                    "message": "Welcome to the Evolution API, it is working!",
                    "version": "1.7.4",
                    "swagger": "http://example.evolution-api.com/docs",
                    "manager": "http://example.evolution-api.com/manager",
                    "documentation": "https://doc.evolution-api.com"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey",
        "description": "Your authorization key header"
      }
    }
  }
}
